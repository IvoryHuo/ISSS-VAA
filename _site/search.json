[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications homepage. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 01",
    "section": "",
    "text": "Age-sex pyramid is an analytical visualisation commonly used by demographers to reveal the structure of population by gender and age group. In this take-home exercise, you are required to reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. Instead of plotting a single age-sex pyramid, however, you are required to display nine selected planning areas on a single view by using trellis display (also know as small-multiple plot).\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022 should be used to prepare the analytical visualisation. The data can be downloaded here."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#use-tableau-prep-for-data-preparation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#use-tableau-prep-for-data-preparation",
    "title": "Take Home Exercise 01",
    "section": "4.1 Use Tableau Prep for data preparation",
    "text": "4.1 Use Tableau Prep for data preparation\nThe flow of the data preparation to obtain the Median Age and Old Age Support Ratio for each PA is as shown below.\n\n\n\nFig 4.1.1 Tableau Prep Workflow\n\n\n\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1\nLoad the originl data csv into Tableau Prep by click the plus symbol besides Connections, then choose Text File.\n\n\n\n2\nHide unnecessary columns by unclick the specific Field Name. In this task, the SZ(subzone), FA(floor area), Time(2022) are hided.\n\n\n\n3\nCalculate median age for each age group, and the total age for each row = median age * population in each row.\n\n\n\n4\nAggregate the age and population for each PA.\n\n\n\n5\nCalculate the median age for each PA and output as csv file.\n\n\n\n6\nCreate new age group by grouping original age groups.\n\n\n\n7\nAggregate population for each PA.\n\n\n\n8\nConvert the long table to wide table.\n\n\n\n9\nCalculate old age support ratio for each PA and output as csv file."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#build-dashboard",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#build-dashboard",
    "title": "Take Home Exercise 01",
    "section": "4.2 Build Dashboard",
    "text": "4.2 Build Dashboard\n\n4.2.1 Draw Map Highlighting the 9 Most Populated PA in Singapore\n\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1\nLoad the original population .csv file, subzone by planning area .shp file and the two output files with derived measures (old age support ratio and median age) in each planning region .csv files in Tableau Desktop( for mapping purpose).\n\n\n\n2\nDrag all the files besides the original of population file to join files by matching PA (the name of the planning areas). Note that in .shp file, the name of planning areas are in upper case. We need to edit the matching by Upper(PA) = PA(.shp file).\n\n\n\n3\nFiles are joined successfully.\n\n\n\n4\nDrop Geometry to the field.\n\n\n\n5\nDrag Pop to Color, PA to Label.\n\n\n\n6\nEdit the color. When we choose step 3 and modify the color of least population to light grey, the no. of highlighted region is 9.\n\n\n\n7\nEdit the label on the map. Select always show for Punggol and Bedok, and never show for the rest PA. We can annotate the two highlighted regions to facilitate understanding.\n\n\n\n\n\n\n\n4.2.2 Draw Pyramids of the 9 PAs and Display in Trellis (single diagram)\n\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1\nManually sort the PA (name of planning areas) based on median age as we would like to control the arrangement of pyramids of PA in trellis.\n\n\n\n2\nThe 9 most populated PA are sorted, while the rest of PA are unchanged.\n\n\n\n3\nCreate a new parameter representing the number of columns in trellis. In this example, the parameter should be sqrt(9) = 3. Note that creating such parameter is to avoid hard code.\n\n\n\n4\nCreate a new calculated field named Index of each row.\n\n\n\n5\nCreate a new calculated field named Column Index of each row.\n\n\n\n6\nCreate a new calculated field named Row Index of each row. Note that the column index and row index will be used when we need to display the 9 pyramids in trellis (a single diagram containning many small plots). The two index serve the purpose as the coordinate of each small plot, such as (1,1) in the top left corner and (3,3) in the bottom right corner.\n\n\n\n7\nAs we would like to display partial data in trellis, we created a new calculated field called Group1 to group the 9 selected PA in one group,\n\n\n\n8\nThen we drop Group1, choose Attribute to filter and select ‘1’ only.\n\n\n\n9\nDue to space constrain, we create new age groups. In the original dataset, the step between consecutive age groups is 5. We increase it to 10. That is, we combine every 2 groups into 1, such as 0 to 4 and 5 to 9 into 0 to 9.\n\n\n\n\n10\nCreate new calculated field of population of males and females as shown.\n\n\n\n\n11\nDrop Row_Index, Male and Female into Columns.\nDrop Column_Index and AGE into Rows.\nDrop PA to Detail.\nNote that we need to modify the Row_Index and Column_Index by selecting computing using PA.\n\n\n\n12\nThen we drop the [Sex] to Colour, Rank of PA to Detail in Mark card of All. We can modify the color of sex by using blue to represent Male and Pink to represent Female.\n\n\n\n13\nModify the tooltip.\n\n\n\n14\nRearrange the order of age group on y axis.\n\n\n\n15\nAdd the label for the bar representing age group of 90+ for Males in each PA.\nFirst, select all bars and choose Mark Label -> Never Show.\nThen select the bars representing age group of 90+ and choose Mark Label -> Always Show.\n\n\n\n\n16\nThen add names of PA and median age of PA to Labels.\n\n\n\n17\nReverse the Male axis to build pyramid.\n\n\n\n\n18\nFormat of label by click the ‘…’ as shown on the screenshot.\nPlease note that in order for the label to appear on the top left corner, I specifically add a full stop of blue color after many empty spaces in the second line.\n\n\n\n19\nAdd the title of the worksheet.\nRemove the unnecessary headers to obtain the final view of the worksheet.\n\n\n\n20\nCreate a new worksheet to plot the pyramid of Singapore as a reference.\n\n\n\n21\nCreate a table showing the Old Age Support Ratio of each PA.\n\n\n\n22\nCreate a new dashboard and drop the worksheets to specific locations and adjust the width and height of each region.\nAdd Note, data source and update date.\n\n\n\n23\nPublish the dashboard. Note that we need to choose to Extract Data, instead of using Live Data.\n\n\n\n\n\nI appreciate you taking the time to read this article and paying attention to it."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take Home Exercise 02",
    "section": "",
    "text": "The Task In this take-home exercise, you are required to:\n\nselect one of the Take-home Exercise 1 prepared by your classmate,\ncritic the submission in terms of clarity and aesthetics,\nprepare a sketch for the alternative design by using the data visualisation design principles and best practices, and\nremake the original design by using ggplot2, ggplot2 extensions and tidyverse packages."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity",
    "title": "Take Home Exercise 02",
    "section": "Clarity",
    "text": "Clarity\n\nThe title of dashboard is unclear. We are suppose to represent the distribution of a population by age and sex, but not ‘age pyramid: sex pattern’.\nThe number of Planning Areas (PA) should be 9, but not all.\nThere is no annotation, subtitles or note to tell data story. Central tendency measures such as median could be added to provide audience with better interpretation of the distribution.\nIn a population pyramid, males are usually shown on the left by blue and females are usually shown on the right by pink/red. In the diagram, the different gender are represented by the same color.\nThe label of the y-axis of age is misleading. The age group should be represented by an interval (0 to 9, 10 to 19, 20 to 29, …) instead of an integer(0,10,20,…). The order of age group is wrong. And it should no start at null and end at 80. In fact, the ‘Null’ in the example should represent the group ‘90_and_above’.\nThe label of the x-axis is hard to read. In fact, the gender can be represented by legend and the ‘population’ can be labeled just once on x-axis.\nThere is no update date and data source.\n\n\nAesthetics\n\nThe arrangement of pyramids is only in the diagonal of a matrix. The information is not displayed in one page as many space are wasted. We should display the 9 pyramids in 3 * 3 matrix. It enables us to make comparisons quickly and easily."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-and-launching-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-and-launching-r-packages",
    "title": "Take Home Exercise 02",
    "section": "Install and Launching R packages",
    "text": "Install and Launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages (ggplot2 belongs to tidyverse packages) are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-the-data",
    "title": "Take Home Exercise 02",
    "section": "Importing the data",
    "text": "Importing the data\n\npop_data <- read_csv(\"data/respopagesexfa2022.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-preparation",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-preparation",
    "title": "Take Home Exercise 02",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nDelete columns of “SZ”,“FA” and “Time” and keep “PA”, “AG”, “Sex” and “Pop”.\n\n\npop_data2 <- pop_data[,!names(pop_data) %in% c(\"SZ\",\"FA\",\"Time\")]\nhead(pop_data2,5)\n\n# A tibble: 5 × 4\n  PA         AG     Sex     Pop\n  <chr>      <chr>  <chr> <dbl>\n1 Ang Mo Kio 0_to_4 Males     0\n2 Ang Mo Kio 0_to_4 Males    10\n3 Ang Mo Kio 0_to_4 Males    20\n4 Ang Mo Kio 0_to_4 Males    60\n5 Ang Mo Kio 0_to_4 Males    10\n\n\n\nAdd the ranking number to the PA to find the 9 most populated PA.\n\n\npa_pop <- aggregate(Pop~PA,pop_data,sum)\n#pa_pop\npa_pop$rank <- NA\npa_pop$rank[order(-pa_pop$Pop)] <- 1:nrow(pa_pop)\nnine_most_populated <- filter(pa_pop,rank<=9)\n#nine_most_populated\nchosen_PA <- nine_most_populated$PA\nchosen_PA\n\n[1] \"Bedok\"         \"Choa Chu Kang\" \"Hougang\"       \"Jurong West\"  \n[5] \"Punggol\"       \"Sengkang\"      \"Tampines\"      \"Woodlands\"    \n[9] \"Yishun\"       \n\n\n\nFind the estimated mean age in each PA\n\n\npop_data_mean <- \n  mutate(pop_data2,\n    # Create New Age groups\n    AGE = case_when(\n      AG == \"0_to_4\" ~ 2,\n      AG == \"5_to_9\" ~ 7,\n      AG == \"10_to_14\" ~ 12,\n      AG == \"15_to_19\" ~ 17,\n      AG == \"20_to_24\" ~ 22,\n      AG == \"25_to_29\" ~ 27,     \n      AG == \"30_to_34\" ~ 32,\n      AG == \"35_to_39\" ~ 37,      \n      AG == \"40_to_44\" ~ 42,\n      AG == \"45_to_49\" ~ 47,     \n      AG == \"50_to_54\" ~ 52,\n      AG == \"55_to_59\" ~ 57, \n      AG == \"60_to_64\" ~ 62,\n      AG == \"65_to_69\" ~ 67,     \n      AG == \"70_to_74\" ~ 72,\n      AG == \"75_to_79\" ~ 77,      \n      AG == \"80_to_84\" ~ 82,\n      AG == \"85_to_89\" ~ 87,     \n      AG == \"90_and_over\" ~ 92\n      )\n    )\n\n# Find the total age for population in each age group\npop_data_mean <- pop_data_mean %>% \n  mutate(\n    Total_age_pa = ifelse(Pop == \"Null\", 0, AGE * Pop)\n  )\nhead(pop_data_mean,5)\n\n# A tibble: 5 × 6\n  PA         AG     Sex     Pop   AGE Total_age_pa\n  <chr>      <chr>  <chr> <dbl> <dbl>        <dbl>\n1 Ang Mo Kio 0_to_4 Males     0     2            0\n2 Ang Mo Kio 0_to_4 Males    10     2           20\n3 Ang Mo Kio 0_to_4 Males    20     2           40\n4 Ang Mo Kio 0_to_4 Males    60     2          120\n5 Ang Mo Kio 0_to_4 Males    10     2           20\n\n\n\n# Calculated the mean age of population in each PA\npa_mean <- aggregate(cbind(Pop,Total_age_pa)~PA,pop_data_mean,sum)\npa_mean <- pa_mean %>%\n  mutate(\n    mean_age_pa = Total_age_pa/Pop\n  )\n\n# Filter the dataset by showing the result of the 9 most populated PA\npa_mean <-pa_mean%>%\n  filter(PA %in% chosen_PA)\n# Arrange the PA by their mean age in descending order  \npa_mean <- pa_mean[order(pa_mean$mean_age_pa,decreasing=TRUE),]\npa_mean[c(1,4)]\n\n             PA mean_age_pa\n1         Bedok    43.81877\n3       Hougang    42.56407\n7      Tampines    41.13840\n4   Jurong West    40.39587\n9        Yishun    40.24887\n2 Choa Chu Kang    39.28368\n8     Woodlands    38.82079\n6      Sengkang    37.33709\n5       Punggol    34.78819"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#create-visualisation",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#create-visualisation",
    "title": "Take Home Exercise 02",
    "section": "Create Visualisation",
    "text": "Create Visualisation\n\nAggregate data using planning area and gender. Note that to build the age-sex pyramid, the male population should be equal to negative of the original value.\n\n\npop_data2$Population <- ifelse(pop_data2$Sex == \"Males\", (-1)*pop_data2$Pop,pop_data2$Pop)\nfinal_pop_data <- aggregate(Population~PA++AG+Sex,FUN = sum,data=pop_data2)\nmost_populatedPA_pop_data <- final_pop_data%>%filter(final_pop_data$PA %in% chosen_PA)\n\nhead(most_populatedPA_pop_data,5)\n\n             PA     AG     Sex Population\n1         Bedok 0_to_4 Females       4990\n2 Choa Chu Kang 0_to_4 Females       4090\n3       Hougang 0_to_4 Females       4460\n4   Jurong West 0_to_4 Females       4800\n5       Punggol 0_to_4 Females       6930\n\n\n\nDue to the space constain, we creat a new age group, AGE, where the range of each interval increases from 5 to 10.\n\n\nmost_populatedPA_pop_data <- most_populatedPA_pop_data %>%\n  mutate(\n    AGE = case_when(\n      AG == \"0_to_4\" | AG == \"5_to_9\" ~ \"0-9\",\n      AG == \"10_to_14\" | AG == \"15_to_19\" ~ \"10-19\",\n      AG == \"20_to_24\" | AG == \"25_to_29\" ~ \"20-29\",\n      AG == \"30_to_34\" | AG == \"35_to_39\" ~ \"30-39\",\n      AG == \"40_to_44\" | AG == \"45_to_49\" ~ \"40-49\",\n      AG == \"50_to_54\" | AG == \"55_to_59\" ~ \"50-59\",\n      AG == \"60_to_64\" | AG == \"65_to_69\" ~ \"60-69\",\n      AG == \"70_to_74\" | AG == \"75_to_79\" ~ \"70-79\",\n      AG == \"80_to_84\" | AG == \"85_to_89\" ~ \"80-89\",\n      AG == \"90_and_over\" ~ \">90\"\n    )\n  )\n  \nmost_populatedPA_pop_data <- aggregate(Population ~ PA + Sex + AGE, FUN = sum, data = most_populatedPA_pop_data)\n\nhead(most_populatedPA_pop_data,5)\n\n             PA     Sex AGE Population\n1         Bedok Females >90       1470\n2 Choa Chu Kang Females >90        450\n3       Hougang Females >90        880\n4   Jurong West Females >90        600\n5       Punggol Females >90        280\n\n\n\nJoin the two dataset: most_populatedPA_pop_data and pa_mean, i.e. add the mean age of each PA to the above table.\n\n\n#most_populatedPA_pop_data <- left_join(most_populatedPA_pop_data,pa_mean)\n#head(most_populatedPA_pop_data,5)\n\n\nVisualise the 9 age-sex pyramids in a 3 * 3 matrix.\n\n\nggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k'))))\n\n\n\n\n\nWe notices that the order of the age group on y-axis is wrong. Hence, we need to reorder the age groups on y-axis as shown below. Moreover, the 9 most populated PA is arranged according to the mean age in descending order.\n\n\nmost_populatedPA_pop_data$AGE <- factor(most_populatedPA_pop_data$AGE,\n                                       levels = c(\"0-9\",\"10-19\",\"20-29\",\"30-39\",\"40-49\",\"50-59\",\"60-69\",\"70-79\",\"80-89\",\">90\"))\n\nmost_populatedPA_pop_data$PA <- factor(most_populatedPA_pop_data$PA,levels =\n                                         c(\"Bedok\",\"Hougang\",\"Tampines\",\"Jurong West\",\"Yishun\",\"Choa Chu Kang\", \"Woodlands\",\"Sengkang\",\"Punggol\"))\n\npyramids <- ggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k'))))\npyramids\n\n\n\n\n\nThe above diagram can be improved by adding the mean age in each PA as labels.\n\n\nlabels <- c(\"Bedok\\nMean:43.8\",\"Hougang\\nMean:42.6\",\"Tampines\\nMean:41.3\",\n            \"Jurong West\\nMean:40.4\",\"Yishun\\nMean:40.2\",\"Choa Chu Kang\\nMean:39.3\",\n            \"Woodlands\\nMean:38.8\",\"Sengkang\\nMean:37.3\",\"Punggol\\nMean:34.8\")\nmost_populatedPA_pop_data$PA <- factor(most_populatedPA_pop_data$PA, labels = labels)\n\nvis <- ggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", \n       subtitle = \"Bedok has the oldest age structure while Punggol has the youngest\",\n       x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k')))) +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\",hjust = 0.5),\n    plot.subtitle = element_text(size = 10, color = \"darkgrey\",hjust = 0.5),\n    strip.text.x = element_text(size = 9),\n    axis.text=element_text(size=6)\n  )\nvis\n\n\n\n\n\nA nice improvement is to add the complete data set (Singapore) in the background of each pyramid.\n\n\nsg_pop_bg <- most_populatedPA_pop_data[,-1]\nggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(sg_pop_bg, Sex == \"Females\"), fill = \"grey\",stat = \"identity\") +\n  geom_bar(data = subset(sg_pop_bg, Sex == \"Males\"), fill = \"grey\",stat = \"identity\") + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", \n       subtitle = \"Bedok has the oldest age structure while Punggol has the youngest\",\n       x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k')))) +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\",hjust = 0.5),\n    plot.subtitle = element_text(size = 10, color = \"darkgrey\",hjust = 0.5),\n    strip.text.x = element_text(size = 9),\n    axis.text=element_text(size=6)\n  )\n\n\n\n\n\nThe pyramids of each PA is too narrow. We need to transform the Singapore population.\n\n\nsg_pop_bg <- sg_pop_bg %>%\n    mutate(\n    trans_pop = ifelse(Population == \"Null\", 0, 0.2 * Population)\n  )\nhead(sg_pop_bg,5)\n\n      Sex AGE Population trans_pop\n1 Females >90       1470       294\n2 Females >90        450        90\n3 Females >90        880       176\n4 Females >90        600       120\n5 Females >90        280        56\n\n\n\nvis <- ggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(sg_pop_bg, Sex == \"Females\"), aes(x = AGE, y = trans_pop), fill = \"grey\",stat = \"identity\") +\n  geom_bar(data = subset(sg_pop_bg, Sex == \"Males\"), aes(x = AGE, y = trans_pop), fill = \"grey\",stat = \"identity\") + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", \n       subtitle = \"Bedok has the oldest age structure while Punggol has the youngest\",\n       x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k')))) +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\",hjust = 0.5),\n    plot.subtitle = element_text(size = 10, color = \"darkgrey\",hjust = 0.5),\n    strip.text.x = element_text(size = 8),\n    axis.text=element_text(size=6)\n  )\nvis\n\n\n\n\nData Source: Department of Statistics, Singapore"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly,DT,patchwork,ggstatsplot,tidyverse)\n\n\nexam_data = read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly(data = exam_data,\n        x = ~ENGLISH,\n        y=~MATHS,\n        color = ~RACE)\n\n\n\n\n\n\np <-ggplot(data = exam_data,\n           aes(x = MATHS,\n               y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x =  GENDER,\n  y = MATHS,\n  tpye = \"p\",\n  messages = FALSE\n  \n  \n)\n\n\n\n# student-t test: assume equal var.\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE\n)\n\n\n\n\n#Model\n\n# last three comes from easystats: https://easystats.github.io/easystats/\n# readxl belongs to tidyverse but not in default install list\npacman::p_load(readxl,performance,pparameters,see,gtsummary)\n\n\ncar_resale <-read_xls(\"data/ToyotaCorolla.xls\",\n                      \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period,\n            data = car_resale)\n\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\nThe coefficients, predicted values etc can be save as data tables for future/easier comparisons and generate the reports. check gtsummary.\n\ntbl_regression(model)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    Age_08_04\n-14\n-35, 7.1\n0.2\n    Mfg_Year\n1,315\n1,059, 1,571\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n19\n17, 21\n<0.001\n    Guarantee_Period\n28\n3.8, 52\n0.023\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nDiagnostic Check\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\nWith performace from easystsats, we can visual the diagnostic check.\n\ncheck_c <- check_collinearity((model))\nplot(check_c)\n\n\n\n\n\ncheck_model(model)\n\n\n\n\nremove one the two highly correlated vars.\n\nmodel1 <- lm(Price ~Age_08_04 + KM + Weight + Guarantee_Period,\n            data = car_resale)\n\ntbl_regression(model1,intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,186\n-4,093, -278\n0.025\n    Age_08_04\n-119\n-125, -114\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n20\n18, 21\n<0.001\n    Guarantee_Period\n27\n2.1, 52\n0.034\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\nplot(compare_performance(model,model1),rank = TRUE)\n\n\n\n\n#Visusliase Uncertainty ### Use ggplot2\n\nmy_sum = exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n = n(),\n    mean = mean(MATHS),\n    sd = sd(MATHS)\n    \n    \n  )%>%\n  mutate(se=sd/sqrt(n-1))\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(\n    aes(x=RACE,y=mean),\n    stat=\"identity\", #readin the single record\n    color = \"red\",\n    dotsize = 1.5,\n    alpha = 1\n  )\n\n\n\n\n\nUse ggdist method"
  }
]