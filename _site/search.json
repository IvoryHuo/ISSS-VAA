[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nNote that read_csv can deal with attribute with space in names, while read.csv cannot.\nFor example, the attribute name is “Project Name”. Using read.csv, then the name will be read as “Project.Name”. Using read_csv, the name will be read as “Project Name”, the space is retained back."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-no_of_stu-for-different-races",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-no_of_stu-for-different-races",
    "title": "Hands-on Exercise 1",
    "section": "Plotting No_of_Stu for Different Races",
    "text": "Plotting No_of_Stu for Different Races\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-math-grades-for-students-of-different-gender-in-each-class",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-math-grades-for-students-of-different-gender-in-each-class",
    "title": "Hands-on Exercise 1",
    "section": "Plotting Math Grades for students of different gender in each class",
    "text": "Plotting Math Grades for students of different gender in each class\n\nggplot(data = exam_data,\n       aes(x= CLASS,y=MATHS)) +\n  geom_boxplot() +\n  facet_grid(~GENDER)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x= CLASS,y=MATHS)) +\n  geom_boxplot() +\n  facet_grid(rows = vars(GENDER))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x= GENDER,y=MATHS)) +\n  geom_boxplot() +\n  facet_grid(rows = vars(GENDER),cols = vars(CLASS))+\n  theme(axis.text=element_text(size = 6))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip()+\n  theme_minimal()+\n  theme(panel.background = element_rect(fill = \"lightblue\", color = \"white\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = reorder(RACE,RACE,function(x)-length(x)))) +\n  geom_bar()+\n  labs(y = \"No. of Pupils\",x = \"Race\") \n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = fct_infreq(RACE)))+\n  geom_text(stat = 'count',aes(label = after_stat(count)),nudge_y = 5)+\n  geom_text(stat = 'count',aes(label = scales::percent(after_stat(count/sum(count)))), nudge_y = 15)+\n  geom_bar() +\n  labs(y = \"No. of Pupils\",x = \"Race\") +\n  theme(axis.title.y = element_text(hjust = 1)) \n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 color = \"black\",\n                 fill = \"light blue\") +\n  geom_vline(xintercept = mean(exam_data$MATHS),\n             color = \"red\",\n             linetype = \"longdash\") +\n  geom_vline(xintercept = median(exam_data$MATHS),\n             color = \"black\",\n             linetype = \"longdash\")\n\n\n\n\nReference: https://drsimonj.svbtle.com/plotting-background-data-for-groups-with-ggplot2\n\nexam_without_gender = exam_data[,-3]\nggplot(data=exam_data,\n       aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = exam_without_gender,fill = \"grey\",binwidth = 2.5,alpha = 0.5) +\n  geom_histogram(binwidth = 2.5,color = \"black\") +\n  facet_wrap(~GENDER) +\n  ylim(0,30)+\n  guides(fill = FALSE) #remove legend\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS,y=ENGLISH)) +\n  geom_point()+\n  xlim(0,100)+\n  ylim(0,100)+\n  geom_vline(xintercept = 50,linetype = \"longdash\") +\n  geom_hline(yintercept = 50, linetype = \"longdash\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands on Ex 2: Create Elegant Graphs using ggplot2",
    "section": "",
    "text": "Load Packages\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Two packages will be installed and loaded. They are tidyverse and ggiraph.\n\n#always load the tidyverse lastly\npacman::p_load(ggiraph,tidyverse)\n\nImport data\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nplot1 <- ggplot(data = exam,\n                aes(x = MATHS)) +\n  geom_dotplot(dotsize=0.5) +\n  ggtitle(\"Distribution of Maths Scores\")\nplot1\n\n\n\n\nCreate interactive dotplot\n\nplot2 <- ggplot(data = exam,\n                aes(x=MATHS)) +\n  #create interactivity\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  \n  scale_y_continuous(NULL,breaks = NULL)\n                     \n# create widget for interactivity\n# need to pass over the ggplot object to girafe\ngirafe(\n  ggobj = plot2, \n  #Create space\n  width_svg = 6,\n  height_svg = 6 *0.618\n)\n\n\n\n\n\nDisplay more than one in tooltips\n\nexam$tooltip <- c(paste0(\n  \"Name = \", exam$ID,\n  \"\\n Class = \", exam$CLASS\n))\n\nplot3 <- ggplot(data = exam,\n                aes(x=MATHS)) +\n  #create interactivity\n  geom_dotplot_interactive(\n    aes(tooltip = exam$tooltip),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  \n  scale_y_continuous(NULL,breaks = NULL)\n                     \n# create widget for interactivity\n# need to pass over the ggplot object to girafe\ngirafe(\n  ggobj = plot3, \n  #Create space\n  width_svg = 6,\n  height_svg = 6 *0.618,\n  \n    )\n\n\n\n\n\nCusomise tooltip\n\ntooltip_css <- \"background-color:white;\nfont-style:bold;color:black;\"\n\n\n\n\nexam$tooltip <- c(paste0(\n  \"Name = \", exam$ID,\n  \"\\n Class = \", exam$CLASS\n))\n\nplot3 <- ggplot(data = exam,\n                aes(x=MATHS)) +\n  #create interactivity\n  geom_dotplot_interactive(\n    aes(tooltip = exam$tooltip),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  \n  scale_y_continuous(NULL,breaks = NULL)\n                     \n# create widget for interactivity\n# need to pass over the ggplot object to girafe\ngirafe(\n  ggobj = plot3, \n  #Create space\n  width_svg = 6,\n  height_svg = 6 *0.618,\n  options = list(\n    opts_tooltip(\n      css = tooltip_css\n    )\n  )\n)\n\n\n\n\n\ndisplay statistics <- check {function}\n\ntooltip <- function(y,ymax,accuracy = 0.01) {\n  mean <- scale :: number(y,accuracy = accuracy)\n  sem <- sacle\n  \n  \n}\n\n\n\n\nplot5 <- ggplot(data = exam,\n            aes (x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\"\n    \n  ) +\n  \n  scale_y_continuous(NULL, breaks = NULL)\n\n\ngirafe(\n  ggobj = plot5, \n  #Create space\n  width_svg = 6,\n  height_svg = 6 *0.618)\n\n\n\n\n\nchange hover effect\ncombine hover+tooltip"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly,DT,patchwork,ggstatsplot,tidyverse)\n\n\nexam_data = read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly(data = exam_data,\n        x = ~ENGLISH,\n        y=~MATHS,\n        color = ~RACE)\n\n\n\n\n\n\np <-ggplot(data = exam_data,\n           aes(x = MATHS,\n               y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x =  GENDER,\n  y = MATHS,\n  tpye = \"p\",\n  messages = FALSE\n  \n  \n)\n\n\n\n# student-t test: assume equal var.\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE\n)\n\n\n\n\n#Model\n\n# last three comes from easystats: https://easystats.github.io/easystats/\n# readxl belongs to tidyverse but not in default install list\npacman::p_load(readxl,performance,pparameters,see,gtsummary)\n\n\ncar_resale <-read_xls(\"data/ToyotaCorolla.xls\",\n                      \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period,\n            data = car_resale)\n\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\nThe coefficients, predicted values etc can be save as data tables for future/easier comparisons and generate the reports. check gtsummary.\n\ntbl_regression(model)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    Age_08_04\n-14\n-35, 7.1\n0.2\n    Mfg_Year\n1,315\n1,059, 1,571\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n19\n17, 21\n<0.001\n    Guarantee_Period\n28\n3.8, 52\n0.023\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nDiagnostic Check\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\nWith performace from easystsats, we can visual the diagnostic check.\n\ncheck_c <- check_collinearity((model))\nplot(check_c)\n\n\n\n\n\ncheck_model(model)\n\n\n\n\nremove one the two highly correlated vars.\n\nmodel1 <- lm(Price ~Age_08_04 + KM + Weight + Guarantee_Period,\n            data = car_resale)\n\ntbl_regression(model1,intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,186\n-4,093, -278\n0.025\n    Age_08_04\n-119\n-125, -114\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n20\n18, 21\n<0.001\n    Guarantee_Period\n27\n2.1, 52\n0.034\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\nplot(compare_performance(model,model1),rank = TRUE)\n\n\n\n\n#Visusliase Uncertainty ### Use ggplot2\n\nmy_sum = exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n = n(),\n    mean = mean(MATHS),\n    sd = sd(MATHS)\n    \n    \n  )%>%\n  mutate(se=sd/sqrt(n-1))\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(\n    aes(x=RACE,y=mean),\n    stat=\"identity\", #readin the single record\n    color = \"red\",\n    dotsize = 1.5,\n    alpha = 1\n  )\n\n\n\n\n\nUse ggdist method"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5 (Multivariate Analysis)",
    "section": "",
    "text": "Load packages\n\npacman::p_load(corrplot,tidyverse,ggstatsplot,GGally)\n\nRead Data\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  ggcorrplot.args = list(hc.order = TRUE), # reorder according the hierarchical clustering\n  title = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n)\n\n\n\n\n\n\n\nprovide USERs chances to choose paramaters when building shiny app\n\nggstatsplot::grouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#method-3-ggpairs",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#method-3-ggpairs",
    "title": "In-class Exercise 5 (Multivariate Analysis)",
    "section": "Method 3: ggpairs()",
    "text": "Method 3: ggpairs()\nNoticed that we only study the correlation relationship between all the continuous data. What if there is categorical and continuous data and u would like to plot everything at one glance?\nIn the generalised pairs plot: categorical vs categorical: bar categorical vs continuous: boxplot continuous vs continuous: scatterplot\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nggpairs(data = exam, columns = 4:6)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#method-4-ternary-plot-using-ggtern-to-study-the-relationship-between-3-variables",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#method-4-ternary-plot-using-ggtern-to-study-the-relationship-between-3-variables",
    "title": "In-class Exercise 5 (Multivariate Analysis)",
    "section": "Method 4: Ternary Plot using ggtern to study the relationship between 3 variables",
    "text": "Method 4: Ternary Plot using ggtern to study the relationship between 3 variables\n\npop_data = read_csv(\"data/respopagsex2000to2018_tidy.csv\")\n\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npacman::p_load(ggtern,plotly)\n\nCreate three new age groups young, economic-active and old.\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG,Population) %>% # transform the table using pivot wider\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0) #no record of the total pop is 0.\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2018\") +\n  theme_rgbw()\n\n\n\n\nMake improvements to make the above diagram interactive. In this example, since ggtern is an extension of ggplot2, we could not use ggplotly directly.\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n\nNo scatterternary mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\nWhat if there is more than 3 variables? ## Method 5: heatmap (cell based) columns: variables rows: observations\n\npacman::p_load(seriation, dendextend, heatmaply)\nwh <- read_csv(\"data/WHData-2018.csv\")\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nrow.names(wh) <- wh$Country  #to rename the rows (change object ID) hence heatmaply will use it to label the axis later\n\nWarning: Setting row names on a tibble is deprecated.\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\nInteractive heatmaply (supported by shiny)\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#method-6-kmean-clustering-using-parallel-coordinate",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#method-6-kmean-clustering-using-parallel-coordinate",
    "title": "In-class Exercise 5 (Multivariate Analysis)",
    "section": "Method 6: kmean clustering using parallel coordinate",
    "text": "Method 6: kmean clustering using parallel coordinate\nstatic: ggparcoord() interactive: parallellplot using ds3.jt\n\npacman::p_load(parallelPlot)\n\n\nhistoVisibility <- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications homepage. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Others/general case.html",
    "href": "Others/general case.html",
    "title": "general case",
    "section": "",
    "text": "Category\nFeature\nImpact\n\n\n\n\nHomepage\n\n\n\n\n\nNo Ads\nClean and nice layout improves the overall customer experience\nCustomer’s attention is not distracted\n\n\nFood Delivery\n\n\n\n\n\nPandabox\n\nattract customers to make purchase with limited time of offers\nincrease basket value\nattract customers to try new restaurants\n\n\n\n\nSpeed of Delivery\nshorter waiting time improves the overall customer experience\n\n\n\nProfessional Riders\nRiders will not leave food on the floor/hang it on the door handle when asked to leave the food at doorstep. Instead, they will place it on the empty space on the shoe rack.\n\n\nPick-up\n\n\n\n\n\ncredit card promotion\nattract customers to link credit card\n\n\n\npandapro enjoys extra discount\nattract customers to subscribe, as pick up price sometimes cheaper than purchase in store\n\n\nSubsription\n\n\n\n\n\nLowest subscription fee\nCustomers who is aware of the pick-up discount are more likely to join the membership"
  },
  {
    "objectID": "Others/general case.html#cons",
    "href": "Others/general case.html#cons",
    "title": "general case",
    "section": "Cons",
    "text": "Cons\n\n\n\n\n\n\n\n\nCategory\nFeature\nImpact\n\n\n\n\nFood Delivery\n\n\n\n\n\npandapro free delivery requirement not clearly stated\ncustomers might get disappointed\n\n\n\nchoices on Chinese cuisines\nnot as many as the competitor’s\n\n\n\nno mix&match\ncustomer choose not to place an order when they could not meet the minimum order amount from a single restaurant\n\n\n\nno variation on delivery fee\ncustomers who are willing to wait for longer time to pay lower delivery fee might choose to order from competitor’s app\n\n\nPanda Rewards\n\n\n\n\n\nthe points could not be earned automatically after placing orders\ncustomers who used to be awarded automatically might get disappointed"
  },
  {
    "objectID": "Others/pricing schemes.html",
    "href": "Others/pricing schemes.html",
    "title": "Pricing Schemes",
    "section": "",
    "text": "Design\n\nFlat: Delivery fee is fixed with a minimum order amount requirement.\nFor example, delivery = $2.99 with minimum order requirement $36.04.\nNote: The flat rate can be designed based on the geographical location. The rate is higher in CBD where customers have higher personal income.\nFlexible: Delivery fee is calculated using the formula max($0.99, $12 - OrderValue * 0.25), where the minimum order amount required is $28.04.\nTiered: Based on the order values. For example,\n\nif there are 2 categories:\n$0.99 for orders above $44.04\n$4.99 for orders below $44.04\nIf there are 3 categories:\n$0.99 for orders above $44.04\n$3.99 for orders above $32.04\n$4.99 for orders above $28.04\n\n\nAssumptions\n\naverage order value of $40 .\nthe new customers’ behavior follow the existing customers.\nthere is always a minimum order value requirement of 28.04 if not stated, as we do not want the delivery fee to eat into company’s revenue.\nassume that when we cluster customer into 3 clusters, the most representative customer in each cluster spends $28.04, $32.04 and $44.04.\nusually the delivery fee is distance-based. In the above settings, we assume that customer will always choose from the nearest pandamart vendor."
  },
  {
    "objectID": "Others/pricing schemes.html#b.-kpis-used-to-evaluate-the-pricing-schemes",
    "href": "Others/pricing schemes.html#b.-kpis-used-to-evaluate-the-pricing-schemes",
    "title": "Pricing Schemes",
    "section": "B. KPIs used to evaluate the pricing schemes",
    "text": "B. KPIs used to evaluate the pricing schemes\n\nFor different objectives, the KPIs are different. The objectives could be maximize revenue, convert the most number of new customer with the same revenue, maximize the number of orders with the same revenue, maximize the basket value with the same revenue and etc. One of the objective is chosen for this case study.\nGoal: Maximize the number of orders while keeping the target revenue per order at $12\nThat is, we need to determine the best delivery fee in order to achieve the revenue per order above $12 with more orders.\nKPIs\n\n\n\n\n\n\n\n\nCategory\nName\nObjective\n\n\n\n\nRevenue Leads\n\n\n\n\n\nDelivery Fee\nTo find how much do customers willing to pay for a delivery charge, and how does each pricing schemes affect the willingness of paying for delivery charge\n\n\n\nRevenue\nTo find if the new pricing scheme can generate more revenue\n\n\n\nNumber of orders\nTo find if the new pricing scheme can generate more orders from customers\n\n\n\nBasket value\nTo find if the new pricing scheme can increase the basket value for an order\n\n\nApp Engagement\n\n\n\n\n\ntime on page\nTo find if the different pricing schemes affect the customer’s time spent on each page, especially in the “cart” page.\n\n\n\nbounce rate\nTo find if different schemes of delivery fee affect the percentage of visitors that leave the pandamart page without taking any action\n\n\n\nclick through probability\nTo find the probability that a customer click/goes to next step, especially from cart to checkout, and from checkout to finish payment"
  },
  {
    "objectID": "Others/pricing schemes.html#c.-ab-test",
    "href": "Others/pricing schemes.html#c.-ab-test",
    "title": "Pricing Schemes",
    "section": "C. A/B Test",
    "text": "C. A/B Test\n\nThe customers are picked randomly (or we can consider geo-based randomization) and been assigned to control or treatment group. The customers in control group will use the current pricing scheme, while the customers in treatment group will see the new pricing scheme. To keep providing consistent shopping experience, we define customer using their customer_id.\nHypothesis\nThe null hypothesis is that there is no difference in each of the KPIs. The alternative hypothesis can be one-sided or two-sided test. For example, we need to decide whether the new pricing scheme is a better choice to meet the goal stated in part B.\nH0: There is no difference in number_of_orders.\nH1: There is a significant increase in number_of_orders.\nCalculate the sample size. Choose the significance level, power, minimum detectable difference. Once these inputs are finalized, we can use the formula to calculate the sample size.\nChoose the duration of ab test. We could consider days of week effect, seasonality, frequency of purchasing groceries etc. The duration could be set for at least one week.\nAnalyse the results. We should first check the randomisation of sampling by comparing the baseline metrics between two groups. Then we should conduct statistitical test. Statistically, we could use p-values only to tell whether to reject the null hypothesis. Practically, we could compare the confidence interval with the minimum detectable difference used in industry to decide whether its a better pricing scheme or not."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 01",
    "section": "",
    "text": "Age-sex pyramid is an analytical visualisation commonly used by demographers to reveal the structure of population by gender and age group. In this take-home exercise, you are required to reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. Instead of plotting a single age-sex pyramid, however, you are required to display nine selected planning areas on a single view by using trellis display (also know as small-multiple plot).\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022 should be used to prepare the analytical visualisation. The data can be downloaded here."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#use-tableau-prep-for-data-preparation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#use-tableau-prep-for-data-preparation",
    "title": "Take Home Exercise 01",
    "section": "4.1 Use Tableau Prep for data preparation",
    "text": "4.1 Use Tableau Prep for data preparation\nThe flow of the data preparation to obtain the Median Age and Old Age Support Ratio for each PA is as shown below.\n\n\n\nFig 4.1.1 Tableau Prep Workflow\n\n\n\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1\nLoad the originl data csv into Tableau Prep by click the plus symbol besides Connections, then choose Text File.\n\n\n\n2\nHide unnecessary columns by unclick the specific Field Name. In this task, the SZ(subzone), FA(floor area), Time(2022) are hided.\n\n\n\n3\nCalculate median age for each age group, and the total age for each row = median age * population in each row.\n\n\n\n4\nAggregate the age and population for each PA.\n\n\n\n5\nCalculate the median age for each PA and output as csv file.\n\n\n\n6\nCreate new age group by grouping original age groups.\n\n\n\n7\nAggregate population for each PA.\n\n\n\n8\nConvert the long table to wide table.\n\n\n\n9\nCalculate old age support ratio for each PA and output as csv file."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#build-dashboard",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#build-dashboard",
    "title": "Take Home Exercise 01",
    "section": "4.2 Build Dashboard",
    "text": "4.2 Build Dashboard\n\n4.2.1 Draw Map Highlighting the 9 Most Populated PA in Singapore\n\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1\nLoad the original population .csv file, subzone by planning area .shp file and the two output files with derived measures (old age support ratio and median age) in each planning region .csv files in Tableau Desktop( for mapping purpose).\n\n\n\n2\nDrag all the files besides the original of population file to join files by matching PA (the name of the planning areas). Note that in .shp file, the name of planning areas are in upper case. We need to edit the matching by Upper(PA) = PA(.shp file).\n\n\n\n3\nFiles are joined successfully.\n\n\n\n4\nDrop Geometry to the field.\n\n\n\n5\nDrag Pop to Color, PA to Label.\n\n\n\n6\nEdit the color. When we choose step 3 and modify the color of least population to light grey, the no. of highlighted region is 9.\n\n\n\n7\nEdit the label on the map. Select always show for Punggol and Bedok, and never show for the rest PA. We can annotate the two highlighted regions to facilitate understanding.\n\n\n\n\n\n\n\n4.2.2 Draw Pyramids of the 9 PAs and Display in Trellis (single diagram)\n\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1\nManually sort the PA (name of planning areas) based on median age as we would like to control the arrangement of pyramids of PA in trellis.\n\n\n\n2\nThe 9 most populated PA are sorted, while the rest of PA are unchanged.\n\n\n\n3\nCreate a new parameter representing the number of columns in trellis. In this example, the parameter should be sqrt(9) = 3. Note that creating such parameter is to avoid hard code.\n\n\n\n4\nCreate a new calculated field named Index of each row.\n\n\n\n5\nCreate a new calculated field named Column Index of each row.\n\n\n\n6\nCreate a new calculated field named Row Index of each row. Note that the column index and row index will be used when we need to display the 9 pyramids in trellis (a single diagram containning many small plots). The two index serve the purpose as the coordinate of each small plot, such as (1,1) in the top left corner and (3,3) in the bottom right corner.\n\n\n\n7\nAs we would like to display partial data in trellis, we created a new calculated field called Group1 to group the 9 selected PA in one group,\n\n\n\n8\nThen we drop Group1, choose Attribute to filter and select ‘1’ only.\n\n\n\n9\nDue to space constrain, we create new age groups. In the original dataset, the step between consecutive age groups is 5. We increase it to 10. That is, we combine every 2 groups into 1, such as 0 to 4 and 5 to 9 into 0 to 9.\n\n\n\n\n10\nCreate new calculated field of population of males and females as shown.\n\n\n\n\n11\nDrop Row_Index, Male and Female into Columns.\nDrop Column_Index and AGE into Rows.\nDrop PA to Detail.\nNote that we need to modify the Row_Index and Column_Index by selecting computing using PA.\n\n\n\n12\nThen we drop the [Sex] to Colour, Rank of PA to Detail in Mark card of All. We can modify the color of sex by using blue to represent Male and Pink to represent Female.\n\n\n\n13\nModify the tooltip.\n\n\n\n14\nRearrange the order of age group on y axis.\n\n\n\n15\nAdd the label for the bar representing age group of 90+ for Males in each PA.\nFirst, select all bars and choose Mark Label -> Never Show.\nThen select the bars representing age group of 90+ and choose Mark Label -> Always Show.\n\n\n\n\n16\nThen add names of PA and median age of PA to Labels.\n\n\n\n17\nReverse the Male axis to build pyramid.\n\n\n\n\n18\nFormat of label by click the ‘…’ as shown on the screenshot.\nPlease note that in order for the label to appear on the top left corner, I specifically add a full stop of blue color after many empty spaces in the second line.\n\n\n\n19\nAdd the title of the worksheet.\nRemove the unnecessary headers to obtain the final view of the worksheet.\n\n\n\n20\nCreate a new worksheet to plot the pyramid of Singapore as a reference.\n\n\n\n21\nCreate a table showing the Old Age Support Ratio of each PA.\n\n\n\n22\nCreate a new dashboard and drop the worksheets to specific locations and adjust the width and height of each region.\nAdd Note, data source and update date.\n\n\n\n23\nPublish the dashboard. Note that we need to choose to Extract Data, instead of using Live Data.\n\n\n\n\n\nI appreciate you taking the time to read this article and paying attention to it."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take Home Exercise 02",
    "section": "",
    "text": "The Task In this take-home exercise, you are required to:\n\nselect one of the Take-home Exercise 1 prepared by your classmate,\ncritic the submission in terms of clarity and aesthetics,\nprepare a sketch for the alternative design by using the data visualisation design principles and best practices, and\nremake the original design by using ggplot2, ggplot2 extensions and tidyverse packages."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity",
    "title": "Take Home Exercise 02",
    "section": "Clarity",
    "text": "Clarity\n\nThe title of dashboard is unclear. We are suppose to represent the distribution of a population by age and sex, but not ‘age pyramid: sex pattern’.\nThe number of Planning Areas (PA) should be 9, but not all.\nThere is no annotation, subtitles or note to tell data story. Central tendency measures such as median could be added to provide audience with better interpretation of the distribution.\nIn a population pyramid, males are usually shown on the left by blue and females are usually shown on the right by pink/red. In the diagram, the different gender are represented by the same color.\nThe label of the y-axis of age is misleading. The age group should be represented by an interval (0 to 9, 10 to 19, 20 to 29, …) instead of an integer(0,10,20,…). The order of age group is wrong. And it should no start at null and end at 80. In fact, the ‘Null’ in the example should represent the group ‘90_and_above’.\nThe label of the x-axis is hard to read. In fact, the gender can be represented by legend and the ‘population’ can be labeled just once on x-axis.\nThere is no update date and data source.\n\n\nAesthetics\n\nThe arrangement of pyramids is only in the diagonal of a matrix. The information is not displayed in one page as many space are wasted. We should display the 9 pyramids in 3 * 3 matrix. It enables us to make comparisons quickly and easily."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-and-launching-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-and-launching-r-packages",
    "title": "Take Home Exercise 02",
    "section": "Install and Launching R packages",
    "text": "Install and Launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages (ggplot2 belongs to tidyverse packages) are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-the-data",
    "title": "Take Home Exercise 02",
    "section": "Importing the data",
    "text": "Importing the data\n\npop_data <- read_csv(\"data/respopagesexfa2022.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-preparation",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-preparation",
    "title": "Take Home Exercise 02",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nDelete columns of “SZ”,“FA” and “Time” and keep “PA”, “AG”, “Sex” and “Pop”.\n\n\npop_data2 <- pop_data[,!names(pop_data) %in% c(\"SZ\",\"FA\",\"Time\")]\nhead(pop_data2,5)\n\n# A tibble: 5 × 4\n  PA         AG     Sex     Pop\n  <chr>      <chr>  <chr> <dbl>\n1 Ang Mo Kio 0_to_4 Males     0\n2 Ang Mo Kio 0_to_4 Males    10\n3 Ang Mo Kio 0_to_4 Males    20\n4 Ang Mo Kio 0_to_4 Males    60\n5 Ang Mo Kio 0_to_4 Males    10\n\n\n\nAdd the ranking number to the PA to find the 9 most populated PA.\n\n\npa_pop <- aggregate(Pop~PA,pop_data,sum)\n#pa_pop\npa_pop$rank <- NA\npa_pop$rank[order(-pa_pop$Pop)] <- 1:nrow(pa_pop)\nnine_most_populated <- filter(pa_pop,rank<=9)\n#nine_most_populated\nchosen_PA <- nine_most_populated$PA\nchosen_PA\n\n[1] \"Bedok\"         \"Choa Chu Kang\" \"Hougang\"       \"Jurong West\"  \n[5] \"Punggol\"       \"Sengkang\"      \"Tampines\"      \"Woodlands\"    \n[9] \"Yishun\"       \n\n\n\nFind the estimated mean age in each PA\n\n\npop_data_mean <- \n  mutate(pop_data2,\n    # Create New Age groups\n    AGE = case_when(\n      AG == \"0_to_4\" ~ 2,\n      AG == \"5_to_9\" ~ 7,\n      AG == \"10_to_14\" ~ 12,\n      AG == \"15_to_19\" ~ 17,\n      AG == \"20_to_24\" ~ 22,\n      AG == \"25_to_29\" ~ 27,     \n      AG == \"30_to_34\" ~ 32,\n      AG == \"35_to_39\" ~ 37,      \n      AG == \"40_to_44\" ~ 42,\n      AG == \"45_to_49\" ~ 47,     \n      AG == \"50_to_54\" ~ 52,\n      AG == \"55_to_59\" ~ 57, \n      AG == \"60_to_64\" ~ 62,\n      AG == \"65_to_69\" ~ 67,     \n      AG == \"70_to_74\" ~ 72,\n      AG == \"75_to_79\" ~ 77,      \n      AG == \"80_to_84\" ~ 82,\n      AG == \"85_to_89\" ~ 87,     \n      AG == \"90_and_over\" ~ 92\n      )\n    )\n\n# Find the total age for population in each age group\npop_data_mean <- pop_data_mean %>% \n  mutate(\n    Total_age_pa = ifelse(Pop == \"Null\", 0, AGE * Pop)\n  )\nhead(pop_data_mean,5)\n\n# A tibble: 5 × 6\n  PA         AG     Sex     Pop   AGE Total_age_pa\n  <chr>      <chr>  <chr> <dbl> <dbl>        <dbl>\n1 Ang Mo Kio 0_to_4 Males     0     2            0\n2 Ang Mo Kio 0_to_4 Males    10     2           20\n3 Ang Mo Kio 0_to_4 Males    20     2           40\n4 Ang Mo Kio 0_to_4 Males    60     2          120\n5 Ang Mo Kio 0_to_4 Males    10     2           20\n\n\n\n# Calculated the mean age of population in each PA\npa_mean <- aggregate(cbind(Pop,Total_age_pa)~PA,pop_data_mean,sum)\npa_mean <- pa_mean %>%\n  mutate(\n    mean_age_pa = Total_age_pa/Pop\n  )\n\n# Filter the dataset by showing the result of the 9 most populated PA\npa_mean <-pa_mean%>%\n  filter(PA %in% chosen_PA)\n# Arrange the PA by their mean age in descending order  \npa_mean <- pa_mean[order(pa_mean$mean_age_pa,decreasing=TRUE),]\npa_mean[c(1,4)]\n\n             PA mean_age_pa\n1         Bedok    43.81877\n3       Hougang    42.56407\n7      Tampines    41.13840\n4   Jurong West    40.39587\n9        Yishun    40.24887\n2 Choa Chu Kang    39.28368\n8     Woodlands    38.82079\n6      Sengkang    37.33709\n5       Punggol    34.78819"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#create-visualisation",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#create-visualisation",
    "title": "Take Home Exercise 02",
    "section": "Create Visualisation",
    "text": "Create Visualisation\n\nAggregate data using planning area and gender. Note that to build the age-sex pyramid, the male population should be equal to negative of the original value.\n\n\npop_data2$Population <- ifelse(pop_data2$Sex == \"Males\", (-1)*pop_data2$Pop,pop_data2$Pop)\nfinal_pop_data <- aggregate(Population~PA++AG+Sex,FUN = sum,data=pop_data2)\nmost_populatedPA_pop_data <- final_pop_data%>%filter(final_pop_data$PA %in% chosen_PA)\n\nhead(most_populatedPA_pop_data,5)\n\n             PA     AG     Sex Population\n1         Bedok 0_to_4 Females       4990\n2 Choa Chu Kang 0_to_4 Females       4090\n3       Hougang 0_to_4 Females       4460\n4   Jurong West 0_to_4 Females       4800\n5       Punggol 0_to_4 Females       6930\n\n\n\nDue to the space constain, we creat a new age group, AGE, where the range of each interval increases from 5 to 10.\n\n\nmost_populatedPA_pop_data <- most_populatedPA_pop_data %>%\n  mutate(\n    AGE = case_when(\n      AG == \"0_to_4\" | AG == \"5_to_9\" ~ \"0-9\",\n      AG == \"10_to_14\" | AG == \"15_to_19\" ~ \"10-19\",\n      AG == \"20_to_24\" | AG == \"25_to_29\" ~ \"20-29\",\n      AG == \"30_to_34\" | AG == \"35_to_39\" ~ \"30-39\",\n      AG == \"40_to_44\" | AG == \"45_to_49\" ~ \"40-49\",\n      AG == \"50_to_54\" | AG == \"55_to_59\" ~ \"50-59\",\n      AG == \"60_to_64\" | AG == \"65_to_69\" ~ \"60-69\",\n      AG == \"70_to_74\" | AG == \"75_to_79\" ~ \"70-79\",\n      AG == \"80_to_84\" | AG == \"85_to_89\" ~ \"80-89\",\n      AG == \"90_and_over\" ~ \">90\"\n    )\n  )\n  \nmost_populatedPA_pop_data <- aggregate(Population ~ PA + Sex + AGE, FUN = sum, data = most_populatedPA_pop_data)\n\nhead(most_populatedPA_pop_data,5)\n\n             PA     Sex AGE Population\n1         Bedok Females >90       1470\n2 Choa Chu Kang Females >90        450\n3       Hougang Females >90        880\n4   Jurong West Females >90        600\n5       Punggol Females >90        280\n\n\n\nJoin the two dataset: most_populatedPA_pop_data and pa_mean, i.e. add the mean age of each PA to the above table.\n\n\n#most_populatedPA_pop_data <- left_join(most_populatedPA_pop_data,pa_mean)\n#head(most_populatedPA_pop_data,5)\n\n\nVisualise the 9 age-sex pyramids in a 3 * 3 matrix.\n\n\nggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k'))))\n\n\n\n\n\nWe notices that the order of the age group on y-axis is wrong. Hence, we need to reorder the age groups on y-axis as shown below. Moreover, the 9 most populated PA is arranged according to the mean age in descending order.\n\n\nmost_populatedPA_pop_data$AGE <- factor(most_populatedPA_pop_data$AGE,\n                                       levels = c(\"0-9\",\"10-19\",\"20-29\",\"30-39\",\"40-49\",\"50-59\",\"60-69\",\"70-79\",\"80-89\",\">90\"))\n\nmost_populatedPA_pop_data$PA <- factor(most_populatedPA_pop_data$PA,levels =\n                                         c(\"Bedok\",\"Hougang\",\"Tampines\",\"Jurong West\",\"Yishun\",\"Choa Chu Kang\", \"Woodlands\",\"Sengkang\",\"Punggol\"))\n\npyramids <- ggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k'))))\npyramids\n\n\n\n\n\nThe above diagram can be improved by adding the mean age in each PA as labels.\n\n\nlabels <- c(\"Bedok\\nMean:43.8\",\"Hougang\\nMean:42.6\",\"Tampines\\nMean:41.3\",\n            \"Jurong West\\nMean:40.4\",\"Yishun\\nMean:40.2\",\"Choa Chu Kang\\nMean:39.3\",\n            \"Woodlands\\nMean:38.8\",\"Sengkang\\nMean:37.3\",\"Punggol\\nMean:34.8\")\nmost_populatedPA_pop_data$PA <- factor(most_populatedPA_pop_data$PA, labels = labels)\n\nvis <- ggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", \n       subtitle = \"Bedok has the oldest age structure while Punggol has the youngest\",\n       x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k')))) +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\",hjust = 0.5),\n    plot.subtitle = element_text(size = 10, color = \"darkgrey\",hjust = 0.5),\n    strip.text.x = element_text(size = 9),\n    axis.text=element_text(size=6)\n  )\nvis\n\n\n\n\n\nA nice improvement is to add the complete data set (Singapore) in the background of each pyramid.\n\n\nsg_pop_bg <- most_populatedPA_pop_data[,-1]\nggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(sg_pop_bg, Sex == \"Females\"), fill = \"grey\",stat = \"identity\") +\n  geom_bar(data = subset(sg_pop_bg, Sex == \"Males\"), fill = \"grey\",stat = \"identity\") + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", \n       subtitle = \"Bedok has the oldest age structure while Punggol has the youngest\",\n       x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k')))) +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\",hjust = 0.5),\n    plot.subtitle = element_text(size = 10, color = \"darkgrey\",hjust = 0.5),\n    strip.text.x = element_text(size = 9),\n    axis.text=element_text(size=6)\n  )\n\n\n\n\n\nThe pyramids of each PA is too narrow. We need to transform the Singapore population.\n\n\nsg_pop_bg <- sg_pop_bg %>%\n    mutate(\n    trans_pop = ifelse(Population == \"Null\", 0, 0.2 * Population)\n  )\nhead(sg_pop_bg,5)\n\n      Sex AGE Population trans_pop\n1 Females >90       1470       294\n2 Females >90        450        90\n3 Females >90        880       176\n4 Females >90        600       120\n5 Females >90        280        56\n\n\n\nvis <- ggplot(most_populatedPA_pop_data, \n       aes(x = AGE, y = Population, fill = Sex)) + \n  geom_bar(data = subset(sg_pop_bg, Sex == \"Females\"), aes(x = AGE, y = trans_pop), fill = \"grey\",stat = \"identity\") +\n  geom_bar(data = subset(sg_pop_bg, Sex == \"Males\"), aes(x = AGE, y = trans_pop), fill = \"grey\",stat = \"identity\") + \n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Females\"), stat = \"identity\") +\n  geom_bar(data = subset(most_populatedPA_pop_data, Sex == \"Males\"), stat = \"identity\") + \n  coord_flip()+\n  facet_wrap(~ PA,ncol = 3 ) +\n  labs(title=\"Age-sex Pyramids in 9 Most Populated PA, as of June 2022\", \n       subtitle = \"Bedok has the oldest age structure while Punggol has the youngest\",\n       x = \"Age Group\",y=\"Population\") +\n  scale_y_continuous(breaks = seq(-20000, 20000, 10000), \n                     labels = paste0(as.character(c('20k','10k','0','10k','20k')))) +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\",hjust = 0.5),\n    plot.subtitle = element_text(size = 10, color = \"darkgrey\",hjust = 0.5),\n    strip.text.x = element_text(size = 8),\n    axis.text=element_text(size=6)\n  )\nvis\n\n\n\n\nData Source: Department of Statistics, Singapore"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take Home Exercise 03",
    "section": "",
    "text": "To uncover the salient patterns of the resale prices of 3-room, 4-room and 5-room public housing property by residential towns and estates in Singapore.\nWe will use appropriate analytically visualisation techniques as well as interactive techniques to enhance user and data discovery experiences.\nThe data can be downloaded here."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#transaction-volume",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#transaction-volume",
    "title": "Take Home Exercise 03",
    "section": "1. Transaction volume",
    "text": "1. Transaction volume\nLet us first study the number of resale HDBs of different flat types from Jan 2017 to Feb 2023.\n\n\nShow the code\np1 <- prop_data %>%\n  group_by(month) %>%\n  ggplot(mapping = aes(x = prop_data$month)) +\n  geom_bar_interactive(\n    aes(tooltip = prop_data$month)\n  )+\n  theme_bw()+\n  \n  labs(title = \"Monthly Sales Volume, from Jan 2017 to feb 2023\", x = 'Time', y = 'Monthly Sales Volume',\n       caption = \"Singapore circuit breaker measures · 2020-04-07 to 2020-06-01 (1 month, 3 weeks, and 4 days)\") +\n  \n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank()) +\n  geom_vline(aes(xintercept = '2020-04'),linetype = \"dashed\",color= 'red') +\n  annotate(\"text\",label = \"Circular Break\", x = \"2019-11\",y=1000) +\n\n\n  facet_wrap(~flat_type, nrow = 3) \n  \ngirafe(\n  ggobj = p1,\n  width_svg = 6,\n  height_svg = 6 * 0.618\n)\n\n\n\n\n\n\nInteractivity: By hovering the mouse pointer on the bar of interest, the respective month will be displayed.\nFindings: During the 2 months of circular break, the number of HDB resale flat transactions dropped 80% and recovered as soon as possible after the circular break ends. The volume of transactions increased after the pandemic. The most popular type is the 4-room flats."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#resale-price-of-different-flat-types",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#resale-price-of-different-flat-types",
    "title": "Take Home Exercise 03",
    "section": "2. Resale Price of different flat types",
    "text": "2. Resale Price of different flat types\n\na.Trend\n\n\nShow the code\nprop_data_p2 <- prop_data %>%\n  separate(month, into = c(\"year\", \"month\"), sep = \"-\", convert = TRUE) %>%\n  group_by(flat_type,year) %>%\n  summarise(ave_price = round(median(resale_price),1),\n            transation_volume = n(),\n            mean_size = round(mean(floor_area_sqm),1))\n\ntooltip_p2 <- \n  c(paste( \"Flat type:\", prop_data_p2$flat_type,\n           \"\\n Median resale price:\" , prop_data_p2$ave_price,\n           \"\\n Transaction volume:\", prop_data_p2$transation_volume,\n           \"\\n Mean size (sqm):\", prop_data_p2$mean_size\n  \n))\n\np2 <-prop_data_p2 %>%\n  ggplot(aes(x = year, y = ave_price,colour = flat_type))+\n  geom_smooth(alpha = 0.1) +\n  geom_point_interactive(aes(tooltip = tooltip_p2),size = 5) +\n  theme_classic() +\n  scale_x_continuous(breaks = seq(2017,2023,by = 1),limits = c(2017,2023)) +\n  labs(title = \"Resale Price of HDBs from 2017 to 2023\", x = 'Year', y = 'Resale Price (SGD)')\n\ngirafe(\n  ggobj = p2,\n  width_svg = 12\n)\n\n\n\n\n\n\nInteractivity: By hovering the mouse pointer on the data point(solid dot on the lines) of interest, the tooltip will be displayed. The tooltip includes the derived statistics of the median resale price, transaction volume and mean size.\nFindings: The resale flat prices were relatively stable between 2017 and 2020. For 3-room HDB, the price decreased slightly from 2017 to 2019. Then the prices for all the 3 types began to rise from 2020. The difference of median transaction price between 3-room and 4-room is much larger than it between the 4-room and 5-room.\n\n\nb.ANOVA test of median price\nDoes the mean of the price per sqm differ among different flat types? First, let us explore the distribution of the mean price per sqm for different flat types.\n\n\nShow the code\nprop_data_test1 <- prop_data %>%\n  mutate(ave_price_per_sqm = round(resale_price/floor_area_sqm,1))\n\nprice_distribution <- prop_data_test1 %>%\n  ggplot(aes(x = ave_price_per_sqm,y = flat_type)) +\n  geom_density_ridges_gradient(color = 'white') +\n  scale_fill_viridis_c(option = \"C\") +\n  theme_ggstatsplot() +\n  labs(title = \"Distribution of Price\", \n       x = \"Mean of Price psm (SGD)\", \n       y = \"Flat Type\") \nprice_distribution\n\n\n\n\n\nAs the price per sqm of all three types skewed to left and does not follow a normal distribution, we use non-parametric anova test to compare the median of the price per sqm of 3 different flat types.\n\n\nShow the code\nt1 <- ggbetweenstats(\n  data = prop_data_test1,\n  x = flat_type,\n  y = ave_price_per_sqm,\n  type = \"np\",\n  mean.ci = TRUE,\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\nt1\n\n\n\n\n\nKruskal-Wallis test is a non-parametric method for testing whether samples originate from the same distribution. Null hypothesis assumes that the groups are from identical populations. Alternative hypothesis assumes that at least one group comes from a different population than the others.\nConclusion: From the pairwise test result, we can conclude that: 1. There is no difference between the median price per sqm of 3-room and 4-room. 2. There are differences between the median price per sqm of 3-room and 5-room, and of 4-room and 5-room."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#resale-price-psm-in-different-residential-towns",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#resale-price-psm-in-different-residential-towns",
    "title": "Take Home Exercise 03",
    "section": "3. Resale Price psm in different residential towns",
    "text": "3. Resale Price psm in different residential towns\n\na. Overview\nPlot the static ridgelines to show the distribution of average price/psm of flats from Jan 2017 to Feb 2023 in Singapore for each residential towns.\n\n\nShow the code\n p3<- prop_data %>%\n  group_by(town) %>%\n  mutate(price_psm = resale_price/floor_area_sqm) %>%\n  ggplot(mapping = aes(x=price_psm, \n                       y = reorder(as.factor(town),-price_psm),\n                       fill = after_stat(x)\n                       )\n         ) +\n  geom_density_ridges_gradient( color = \"white\") +\n  scale_fill_viridis_c(option = \"C\") +\n  theme_bw() +\n  \n  theme(legend.position = \"none\") +\n  theme(panel.grid = element_blank()) +\n  labs(title = \"HDB resale prices by residential towns, 2017 - 2023 Singapore\", \n       x = \"Price psm (SGD)\", \n       y = \"Planning Area\")\np3\n\n\n\n\n\nWe can conclude that the resale of HDB in the areas such as woodlands, choa chu kang, jurong west are transacted at lower average price. And the price clustered around the average of $4000 psm.\nWhile the price of resale HDB in Bukit merah, queenstown and central area not only have a higher price, but also scattered from $4000 to $12000.\nIn general, HDBs in residential towns having lower price tend to have a lower variability.\n\n\nb. Animation of Price changes over time\nLet us animate it.\n\n\nShow the code\nani1 <- prop_data %>%\n  group_by(town) %>%\n  mutate(price_psm = resale_price/floor_area_sqm) %>%\n  mutate(date = as.Date(paste(month,\"-01\", sep=\"\"))) %>%\n  ggplot(mapping = aes(x=price_psm, \n                       y = reorder(as.factor(town),-price_psm),\n                       fill = after_stat(x)\n                       )\n         ) +\n  geom_density_ridges_gradient( color = \"white\") +\n  scale_fill_viridis_c(option = \"C\") +\n  theme_bw() +\n  \n  theme(legend.position = \"none\") +\n  theme(panel.grid = element_blank()) +\n  labs(title = \"HDB resale prices in {frame_time} Singapore\", \n       x = \"Price psm (SGD)\", y = \"\") +\n  \n  transition_time(date)\n  anim_save('price_animation.gif',ani1)\n\n\n\n\n\nSource: HDB of Singapore 2023\n\n\nFrom 2017 to 2020, the price is quite stable. Each curve stays at its original place. The shape of the curves with lower average price have much less change compares with those with higher average price.\nHowever, from 2020 onwards, the curve starts to move to right. The average price almost increases by $1000 from 2020 to 2023."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#features-of-the-hdbs-in-different-residential-towns",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#features-of-the-hdbs-in-different-residential-towns",
    "title": "Take Home Exercise 03",
    "section": "4. Features of the HDBs in Different Residential Towns",
    "text": "4. Features of the HDBs in Different Residential Towns\n\na.Age of flats by flat type\nLet us explore the remaining lease years of the HDB flats in different residential towns. The age of HDB flat = 99 years - remaining lease years.\n\n\nShow the code\nprop_data_p4<- prop_data %>%\n  mutate(age = 99-as.integer(substr(prop_data$remaining_lease,0,2))) %>%\n  group_by(town)\n\ntooltip <- function(y, ymax, accuracy = .01) {   \n  mean <- scales::number(y, accuracy = accuracy) \n  sem <- scales::number(ymax - y, accuracy = accuracy) \n  paste(\"Mean Age:\", mean, \"+/-\", sem) \n}\n\ngg_point <- ggplot(data=prop_data_p4, \n                   aes(x = reorder(town,age)),\n) +\n  stat_summary(aes(y = age, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,\n    fill = \"lightblue\"\n    \n  ) +\n  stat_summary(aes(y = age),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) +\n  facet_wrap(~flat_type)+\n  coord_flip()+\n  theme_bw() +\n  \n  theme(legend.position = \"none\") +\n  theme(panel.grid = element_blank()) +\n  labs(title = \"Age of HDBs by residential towns, 2017 - 2023 Singapore\", \n       y = \"Age (years)\", \n       x = \"Residential Town\") \n  #theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\nInteractivity: By hovering the mouse pointer on the bar of interest, the respective mean age and standard error of mean will be displayed.\nWe can conclude that the HDB at punggol, sengkang are relatively new compared with the flats in marine parade and bukit timah. Moreover, 3-room flats are older than 4-room and 5-room flats.\n###b. Storey of flats by flat type"
  }
]